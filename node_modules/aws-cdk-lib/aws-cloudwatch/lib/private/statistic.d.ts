export interface SimpleStatistic {
    type: 'simple';
    statistic: Statistic;
}
export interface PercentileStatistic {
    type: 'percentile';
    percentile: number;
}
export interface GenericStatistic {
    type: 'generic';
    statistic: string;
}
/**
 * Parse a statistic, returning the type of metric that was used (simple or percentile)
 */
export declare function parseStatistic(stat: string): SimpleStatistic | PercentileStatistic | GenericStatistic;
export declare function normalizeStatistic(stat: string): string;
/**
 * Enum for simple statistics
 *
 * (This is a private copy of the type in `metric-types.ts`; this type should always
 * been private, the public one has been deprecated and isn't used anywhere).
 *
 * @see https://docs.aws.amazon.com/AmazonCloudWatch/latest/monitoring/Statistics-definitions.html
 */
export declare enum Statistic {
    /**
     * The count (number) of data points used for the statistical calculation.
     */
    SAMPLE_COUNT = "SampleCount",
    /**
     * The value of Sum / SampleCount during the specified period.
     */
    AVERAGE = "Average",
    /**
     * All values submitted for the matching metric added together.
     * This statistic can be useful for determining the total volume of a metric.
     */
    SUM = "Sum",
    /**
     * The lowest value observed during the specified period.
     * You can use this value to determine low volumes of activity for your application.
     */
    MINIMUM = "Minimum",
    /**
     * The highest value observed during the specified period.
     * You can use this value to determine high volumes of activity for your application.
     */
    MAXIMUM = "Maximum"
}
